---
export interface Props {
  toolFilter: string;
}

const { toolFilter } = Astro.props;
---

<div class="map-wrapper">
  <div id="map"></div>
</div>

<script is:inline src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>  
<script is:inline define:vars={{ toolFilter }}>
  if (typeof L === 'undefined') {
    console.error("Leaflet library not loaded. Make sure the Leaflet CSS and JS are included in your layout.");
  }

  const map = L.map('map', {
    scrollWheelZoom: true
  }).setView([20, 0], 2.3);

  L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://carto.com/">CARTO</a> & OpenStreetMap contributors',
    subdomains: 'abcd',
    maxZoom: 8
  }).addTo(map);

  const toolColors = {
    Mirai: "#695CAB",
    Sybil: "#9CBAE8",
    Mirai_Sybil_Combined: "#E2E000" 
  };

  let allMarkers = [];

  async function loadDataAndCreateMarkers() {
    try {

      const data = [
        {
          "city": "Saint Cyril Cancer Treatment Foundation (NGO)",
          "lat": 6.5244,
          "lon": 3.3792,
          "tool": "Mirai"
        },
        {
          "city": "Centre de Radiologie Ibn Zohr",
          "lat": 36.8065,
          "lon": 10.1815,
          "tool": "Mirai"
        },
        {
          "city": "Shefaa Al Orman",
          "lat": 30.0444,
          "lon": 31.2357,
          "tool": "Mirai"
        },
        {
          "city": "Chiang Mai University",
          "lat": 18.7883,
          "lon": 98.9853,
          "tool": "Mirai"
        },
        {
          "city": "Saigon MEC",
          "lat": 10.8231,
          "lon": 106.6297,
          "tool": "Mirai"
        },
        {
          "city": "Chung Shan Medical University",
          "lat": 24.1477,
          "lon": 120.6736,
          "tool": "Sybil"
        },
        {
          "city": "KG Hospital (South India)",
          "lat": 11.0168,
          "lon": 76.9558,
          "tool": "Mirai"
        },
        {
          "city": "Delhi Medical School (North India)",
          "lat": 28.7041,
          "lon": 77.1025,
          "tool": "Mirai"
        },
        {
          "city": "Apollo Hospital (North India)",
          "lat": 28.7041,
          "lon": 77.1025,
          "tool": "Mirai"
        },
        {
          "city": "CGMH - Chang Gung Memorial Hospital",
          "lat": 25.0330,
          "lon": 121.5654,
          "tool": "Mirai_Sybil"
        },
        {
          "city": "China Medical University Hospital",
          "lat": 24.1477,
          "lon": 120.6736,
          "tool": "Sybil"
        },
        {
          "city": "Singapore General Hospital (SingHealth)",
          "lat": 1.3521,
          "lon": 103.8198,
          "tool": "Sybil"
        },
        {
          "city": "Seoul National University Hospital",
          "lat": 37.5665,
          "lon": 126.9780,
          "tool": "Sybil"
        },
        {
          "city": "Agios Savvas Hospital (National Healthcare Service, ESY)",
          "lat": 37.9838,
          "lon": 23.7275,
          "tool": "Mirai"
        },
        {
          "city": "Catalan Institute of Health",
          "lat": 41.3851,
          "lon": 2.1734,
          "tool": "Mirai"
        },
        {
          "city": "European Institute of Oncology",
          "lat": 45.4642,
          "lon": 9.1900,
          "tool": "Mirai"
        },
        {
          "city": "Istituto Romagnolo per lo Studio dei Tumori (IRST)",
          "lat": 44.0678,
          "lon": 12.5736,
          "tool": "Sybil"
        },
        {
          "city": "Karolinska Institute",
          "lat": 59.3293,
          "lon": 18.0686,
          "tool": "Mirai"
        },
        {
          "city": "University Hospital Zagreb (Croatian Health Insurance Fund, HZZO)",
          "lat": 45.8150,
          "lon": 15.9819,
          "tool": "Sybil"
        },
        {
          "city": "Hannover Medical School",
          "lat": 52.3759,
          "lon": 9.7320,
          "tool": "Sybil"
        },
        {
          "city": "Cambridge University",
          "lat": 52.2053,
          "lon": 0.1218,
          "tool": "Mirai"
        },
        {
          "city": "University of Norwich",
          "lat": 52.6309,
          "lon": 1.2974,
          "tool": "Mirai"
        },
        {
          "city": "Queen Mary University of London",
          "lat": 51.5074,
          "lon": -0.1278,
          "tool": "Mirai"
        },
        {
          "city": "Centre Hospitalier Princesse Grace",
          "lat": 43.7384,
          "lon": 7.4246,
          "tool": "Mirai"
        },
        {
          "city": "SENAI CIMATEC University Center",
          "lat": -12.9714,
          "lon": -38.5014,
          "tool": "Sybil"
        },
        {
          "city": "Santa Marcelina",
          "lat": -23.5505,
          "lon": -46.6333,
          "tool": "Mirai"
        },
        {
          "city": "Hospital de Amor (Barretos)",
          "lat": -20.5568,
          "lon": -48.5682,
          "tool": "Sybil"
        },
        {
          "city": "Santa Casa",
          "lat": -23.5505,
          "lon": -46.6333,
          "tool": "Mirai"
        },
        {
          "city": "University of Chile Digital Hospital",
          "lat": -33.4489,
          "lon": -70.6693,
          "tool": "Mirai_Sybil"
        },
        {
          "city": "Fundacion Valle del Lili",
          "lat": 3.4516,
          "lon": -76.5320,
          "tool": "Mirai"
        },
        {
          "city": "Grupo Angeles",
          "lat": 19.4326,
          "lon": -99.1332,
          "tool": "Mirai"
        },
        {
          "city": "Tec Salud",
          "lat": 25.6866,
          "lon": -100.3161,
          "tool": "Mirai"
        },
        {
          "city": "King Faisal SHRC",
          "lat": 24.7136,
          "lon": 46.6753,
          "tool": "Mirai"
        },
        {
          "city": "SEHA Virtual Hospital",
          "lat": 24.7136,
          "lon": 46.6753,
          "tool": "Mirai"
        },
        {
          "city": "Saudi German Hospital",
          "lat": 24.7136,
          "lon": 46.6753,
          "tool": "Mirai"
        },
        {
          "city": "King Hussein Cancer Center",
          "lat": 31.9454,
          "lon": 35.9284,
          "tool": "Mirai"
        },
        {
          "city": "Henry Ford Hospital (MI)",
          "lat": 42.3314,
          "lon": -83.0458,
          "tool": "Mirai"
        },
        {
          "city": "Memorial Sloan Kettering Cancer Center (NY)",
          "lat": 40.7128,
          "lon": -74.0060,
          "tool": "Mirai"
        },
        {
          "city": "New York Hospitals (NY)",
          "lat": 40.7128,
          "lon": -74.0060,
          "tool": "Mirai"
        },
        {
          "city": "Emory University Hospital (GA)",
          "lat": 33.7490,
          "lon": -84.3880,
          "tool": "Mirai"
        },
        {
          "city": "Inova Health System (VA)",
          "lat": 38.9072,
          "lon": -77.0369,
          "tool": "Mirai"
        },
        {
          "city": "Dana Farber Cancer Institute (MA)",
          "lat": 42.3601,
          "lon": -71.0589,
          "tool": "Mirai"
        },
        {
          "city": "Mount Auburn Hospital (MA)",
          "lat": 42.3744,
          "lon": -71.133,
          "tool": "Mirai"
        },
        {
          "city": "Massachusetts General Hospital (MA)",
          "lat": 42.3601,
          "lon": -71.0589,
          "tool": "Mirai_Sybil"
        },
        {
          "city": "UMass Chan Medical School (MA)",
          "lat": 42.2626,
          "lon": -71.8023,
          "tool": "Mirai"
        },
        {
          "city": "UC Davis (CA)",
          "lat": 38.5816,
          "lon": -121.4944,
          "tool": "Sybil"
        },
        {
          "city": "Martin Luther King Community Hospital (CA)",
          "lat": 34.0522,
          "lon": -118.2437,
          "tool": "Mirai"
        },
        {
          "city": "UCLA (CA)",
          "lat": 34.0522,
          "lon": -118.2437,
          "tool": "Mirai"
        },
        {
          "city": "Kaiser Permanente Northern California (CA)",
          "lat": 37.7749,
          "lon": -122.4194,
          "tool": "Mirai"
        },
        {
          "city": "Medical University of South Carolina (SC)",
          "lat": 32.7767,
          "lon": -79.9311,
          "tool": "Mirai_Sybil"
        },
        {
          "city": "Brigham and Women's (MA)",
          "lat": 42.3362,
          "lon": -71.1068,
          "tool": "Mirai"
        },
        {
          "city": "Wellstar Health System (GA)",
          "lat": 33.7490,
          "lon": -84.3880,
          "tool": "Sybil"
        },
        {
          "city": "University of Illinois Hospital & Health Sciences System (IL)",
          "lat": 41.8781,
          "lon": -87.6298,
          "tool": "Sybil"
        },
        {
          "city": "University of Chicago (IL)",
          "lat": 41.8781,
          "lon": -87.6298,
          "tool": "Mirai"
        },
        {
          "city": "Baptist Memorial Hospital (TN)",
          "lat": 36.1627,
          "lon": -86.7816,
          "tool": "Sybil"
        },
        {
          "city": "Dayton VA Medical Center (OH)",
          "lat": 39.7589,
          "lon": -84.1916,
          "tool": "Sybil"
        },
        {
          "city": "University of Ottawa",
          "lat": 45.4215,
          "lon": -75.6972,
          "tool": "Mirai"
        },
        {
          "city": "British Columbia Cancer Research Centre",
          "lat": 49.2827,
          "lon": -123.1207,
          "tool": "Sybil"
        }
      ];

      // Clear existing markers
      allMarkers.forEach(marker => map.removeLayer(marker));
      allMarkers = [];

      data.forEach(item => {
        // Determine the actual tool(s) for the marker
        let toolsToProcess = [];
        if (item.tool === 'Mirai_Sybil') {
          // If showing all, treat as a special combined type
          if (toolFilter === 'All') {
            toolsToProcess = ['Mirai_Sybil_Combined'];
          } else if (toolFilter === 'Mirai') {
            toolsToProcess = ['Mirai'];
          } else if (toolFilter === 'Sybil') {
            toolsToProcess = ['Sybil'];
          }
        } else {
          toolsToProcess = [item.tool];
        }
        
        toolsToProcess.forEach(tool => {
          // Only create marker if it matches the current filter or if it's the combined type when showing all
          if (toolFilter === 'All' || tool === toolFilter || (tool === 'Mirai_Sybil_Combined' && toolFilter === 'All')) {
            const displayToolName = (tool === 'Mirai_Sybil_Combined' ? 'Mirai & Sybil' : tool); // For popup and legend

            const marker = L.circleMarker([item.lat, item.lon], {
              radius: 6,
              fillColor: toolColors[tool], // Use the determined tool color
              color: "#333",
              weight: 1,
              opacity: 1,
              fillOpacity: 0.85
            });

            // Store the original tool type from data, and the tool name used for display
            marker.originalTool = item.tool; 
            marker.displayToolName = displayToolName; // The name used for popup/legend
            marker.markerColorKey = tool; // Key to retrieve color from toolColors

            const popup = L.popup({ autoClose: false, closeOnClick: false })
              .setContent(`<strong style='font-size: 14px'>${item.city}</strong><br> <div style="font-size: 12px"> Tool: <strong>${displayToolName}</strong></div>`);

            marker.on('mouseover', function(e) {
              popup.setLatLng(e.latlng).openOn(map);
            });

            marker.on('mouseout', function() {
              map.closePopup(popup);
            });

            allMarkers.push(marker);
          }
        });
      });

      updateView(); // Initial view update after markers are created
      updateLegend(); // Initial legend update
    } catch (error) {
      console.error("Error loading or processing data:", error);
      const mapContainer = document.getElementById('map');
      if (mapContainer) {
        mapContainer.innerHTML = '<div style="text-align: center; padding: 20px; color: red;">Error loading map data. Please try again later.</div>';
      }
    }
  }

  function updateView() {
    allMarkers.forEach(marker => {
      // Logic to show/hide markers based on the toolFilter prop
      if (toolFilter === 'All') {
        map.addLayer(marker);
      } else if (marker.originalTool === toolFilter || (marker.originalTool === 'Mirai_Sybil' && marker.displayToolName.includes(toolFilter))) {
        // If 'Mirai_Sybil' item exists, show it under the specific filter
        map.addLayer(marker);
      } else {
        map.removeLayer(marker);
      }
    });
  }

  // Legend setup
  const legend = L.control({ position: "bottomright" });
  legend.onAdd = function() {
    const div = L.DomUtil.create("div", "legend");
    let legendContent = '';

    if (toolFilter === 'All') {
      // Show Mirai, Sybil, and Mirai & Sybil in the legend
      legendContent = `
        <div><span style='background: ${toolColors['Mirai']}'></span> Mirai</div>
        <div><span style='background: ${toolColors['Sybil']}'></span> Sybil</div>
        <div><span style='background: ${toolColors['Mirai_Sybil_Combined']}'></span> Mirai & Sybil</div>
      `;
    } else {
      // Show only the selected tool in the legend
      legendContent = `<div><span style='background: ${toolColors[toolFilter]}'></span> ${toolFilter}</div>`;
    }
    
    div.innerHTML = legendContent;
    return div;
  };
  legend.addTo(map);

  function updateLegend() {
    map.removeControl(legend);
    legend.addTo(map);
  }

  // Load data and create markers when the component mounts
  loadDataAndCreateMarkers();
</script>
